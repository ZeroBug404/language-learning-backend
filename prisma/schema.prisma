// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String
  role      UserRole
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  instructorId String?
  instructor   Instructor? @relation(fields: [instructorId], references: [id])

  studentId String?
  student   Student? @relation(fields: [studentId], references: [id])

  @@map("users")
}

model Language {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Courses Course[]

  @@map("languages")
}

model Course {
  id               String   @id @default(uuid())
  title            String
  description      String
  totalWeek        String
  level            String
  quizzes          String
  learningOutcomes String
  certification    String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  languageId String
  language   Language @relation(fields: [languageId], references: [id])

  instructorId String
  instructor   Instructor @relation(fields: [instructorId], references: [id])

  Students Student[]
  lesson   Lesson[]

  @@map("courses")
}

model Student {
  id           String   @id @default(uuid())
  firstName    String
  middleName   String
  lastName     String
  profileImage String?
  email        String
  contactNo    String
  gender       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  courseId String?
  course   Course? @relation(fields: [courseId], references: [id])

  instructorId String
  instructor   Instructor @relation(fields: [instructorId], references: [id])

  User User[]

  @@map("students")
}

model Instructor {
  id           String   @id @default(uuid())
  name         String
  profileImage String?
  email        String
  contactNo    String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  Courses Course[]

  User User[]

  Student Student[]

  @@map("instructor")
}

model Lesson {
  id          String   @id @default(uuid())
  title       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  courseId String
  Course   Course @relation(fields: [courseId], references: [id])

  @@map("lesson")
}

enum UserRole {
  super_admin
  admin
  instructor
  student
}
